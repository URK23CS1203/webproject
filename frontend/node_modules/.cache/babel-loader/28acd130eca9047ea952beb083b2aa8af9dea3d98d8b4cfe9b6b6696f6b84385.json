{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\arsath\\\\smartCA-project1\\\\frontend\\\\src\\\\pages\\\\AdminTasksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Spinner, Alert, Badge } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminTasksPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchMyTasks = async () => {\n      try {\n        setLoading(true);\n        // --- This calls your new backend route ---\n        const res = await axios.get('/api/tasks/assignedtome');\n        setTasks(res.data);\n      } catch (err) {\n        setError('Failed to fetch tasks.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMyTasks();\n  }, []);\n  const formatDate = dateString => {\n    if (!dateString) return 'N/A';\n    return new Date(dateString).toLocaleDateString();\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"border\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Alert, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Tasks Assigned to Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.length > 0 ? tasks.map(task => {\n          var _task$client;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_task$client = task.client) === null || _task$client === void 0 ? void 0 : _task$client.name) || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Badge, {\n                bg: task.status === 'Completed' ? 'success' : task.status === 'In-Progress' ? 'warning' : 'secondary',\n                children: task.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDate(task.dueDate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, task._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"4\",\n            className: \"text-center\",\n            children: \"You have no tasks assigned to you.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminTasksPage, \"b2alIR17BiaocJvYMXdxyaaqbug=\");\n_c = AdminTasksPage;\nexport default AdminTasksPage;\nvar _c;\n$RefreshReg$(_c, \"AdminTasksPage\");","map":{"version":3,"names":["React","useState","useEffect","Table","Spinner","Alert","Badge","axios","jsxDEV","_jsxDEV","AdminTasksPage","_s","tasks","setTasks","loading","setLoading","error","setError","fetchMyTasks","res","get","data","err","formatDate","dateString","Date","toLocaleDateString","animation","fileName","_jsxFileName","lineNumber","columnNumber","variant","children","className","striped","bordered","hover","responsive","length","map","task","_task$client","client","name","title","bg","status","dueDate","_id","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/arsath/smartCA-project1/frontend/src/pages/AdminTasksPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Spinner, Alert, Badge } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst AdminTasksPage = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchMyTasks = async () => {\r\n      try {\r\n        setLoading(true);\r\n        // --- This calls your new backend route ---\r\n        const res = await axios.get('/api/tasks/assignedtome');\r\n        setTasks(res.data);\r\n      } catch (err) {\r\n        setError('Failed to fetch tasks.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchMyTasks();\r\n  }, []);\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  if (loading) return <Spinner animation=\"border\" />;\r\n  if (error) return <Alert variant=\"danger\">{error}</Alert>;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"mb-4\">Tasks Assigned to Me</h1>\r\n      <Table striped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>Client</th>\r\n            <th>Task Name</th>\r\n            <th>Status</th>\r\n            <th>Due Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tasks.length > 0 ? tasks.map((task) => (\r\n            <tr key={task._id}>\r\n              <td>{task.client?.name || 'N/A'}</td>\r\n              <td>{task.title}</td>\r\n              <td>\r\n                <Badge bg={\r\n                  task.status === 'Completed' ? 'success' :\r\n                  task.status === 'In-Progress' ? 'warning' : 'secondary'\r\n                }>\r\n                  {task.status}\r\n                </Badge>\r\n              </td>\r\n              <td>{formatDate(task.dueDate)}</td>\r\n            </tr>\r\n          )) : (\r\n            <tr>\r\n              <td colSpan=\"4\" className=\"text-center\">You have no tasks assigned to you.</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminTasksPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}